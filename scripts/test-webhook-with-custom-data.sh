#!/bin/bash

# Test Stripe webhook with custom data that matches your application's expectations
# This script creates a mock webhook event with the required metadata

set -e

echo "üß™ Testing Stripe Webhook with Custom Application Data"

# Configuration
WEBHOOK_URL="http://localhost:3001/api/webhooks/stripe"
WEBHOOK_SECRET="whsec_f0c11c2d67f08737cd2ead984f3ab7434355c49ada95783ae1d862196a21d122"

# Create a mock checkout session event with required metadata
MOCK_EVENT='{
  "id": "evt_test_webhook_' $(date +%s) '",
  "object": "event",
  "api_version": "2025-05-28.basil",
  "created": ' $(date +%s) ',
  "data": {
    "object": {
      "id": "cs_test_session_' $(date +%s) '",
      "object": "checkout.session",
      "amount_total": 2999,
      "currency": "usd",
      "customer": "cus_test_customer_123",
      "customer_details": {
        "email": "test@restoreclick.example",
        "name": "Test Customer",
        "phone": "+1234567890"
      },
      "metadata": {
        "session_id": "test_session_' $(date +%s) '",
        "batch_id": "test_batch_' $(date +%s) '"
      },
      "payment_intent": "pi_test_payment_' $(date +%s) '",
      "payment_method_types": ["card"],
      "payment_status": "paid",
      "status": "complete"
    }
  },
  "livemode": false,
  "pending_webhooks": 1,
  "request": {
    "id": "req_test_123",
    "idempotency_key": null
  },
  "type": "checkout.session.completed"
}'

echo "üìã Mock Event Data:"
echo "$MOCK_EVENT" | jq '.'

# Create a simple signature (for testing purposes - in production this would be generated by Stripe)
TIMESTAMP=$(date +%s)
PAYLOAD="$TIMESTAMP.$MOCK_EVENT"
SIGNATURE="t=$TIMESTAMP,v1=test_signature_for_webhook_testing"

echo ""
echo "üîê Using webhook secret: $WEBHOOK_SECRET"
echo "üì° Sending webhook to: $WEBHOOK_URL"

# Send the webhook
RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" -X POST "$WEBHOOK_URL" \
  -H "Content-Type: application/json" \
  -H "stripe-signature: $SIGNATURE" \
  -d "$MOCK_EVENT")

HTTP_STATUS=$(echo "$RESPONSE" | grep "HTTP_STATUS:" | cut -d: -f2)
RESPONSE_BODY=$(echo "$RESPONSE" | grep -v "HTTP_STATUS:")

echo ""
echo "üìä Response Status: $HTTP_STATUS"
echo "üìÑ Response Body: $RESPONSE_BODY"

if [ "$HTTP_STATUS" = "200" ]; then
    echo "‚úÖ Webhook processed successfully!"
    echo ""
    echo "üîç Check the following for verification:"
    echo "  1. Database for created customer and order"
    echo "  2. Server logs for processing details"
    echo "  3. Email queue for queued messages"
elif [ "$HTTP_STATUS" = "400" ]; then
    echo "‚ö†Ô∏è  Webhook rejected (likely signature verification failed)"
    echo "   This is expected with mock signatures"
else
    echo "‚ùå Webhook failed with status $HTTP_STATUS"
    echo "   Check server logs for error details"
fi

echo ""
echo "üí° To test with real Stripe signatures:"
echo "   1. Use Stripe CLI: stripe trigger checkout.session.completed"
echo "   2. Add custom metadata to your Stripe checkout sessions"
echo "   3. Use the webhook forwarding script: ./scripts/test-stripe-webhooks.sh"
